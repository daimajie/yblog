<?php
/**
 * Created by PhpStorm.
 * User : daimajie
 * Email: daimajie@qq.com
 * Date : 2019/1/24
 * Time : 14:52
 */

namespace app\widgets\select2\actions;

use yii\base\Action;
use Yii;
use yii\base\InvalidArgumentException;
use yii\web\Response;
use yii\base\Exception;
use yii\web\BadRequestHttpException;
use app\models\content\Topic;



class SelectAction extends Action
{
    public $table; //搜索模型
    public $index; //select2 的id
    public $text;   //select2 的text

    public $user_id;

    public $limit; //一次搜索限量

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        //矫正数据
        if (empty($this->table) ||
            empty($this->index) ||
            empty($this->text) ||
            empty($this->user_id)
        )
            throw new InvalidArgumentException('传递参数错误.');

        if(intval($this->limit) <= 0)
            $this->limit = 9;

    }

    public function runWithParams($params)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        try{
            //判断是否为表单提交
            if( !Yii::$app->request->isAjax )
                throw new BadRequestHttpException('请求方式不被允许。');

            //获取关键字
            $search = addslashes(trim(Yii::$app->request->get('search')));

            if (empty($search))
                throw new Exception('传递参数错误。');

            $rows = (new \yii\db\Query())
                ->select(['id'=>$this->index, 'text'=>$this->text])
                ->from($this->table)
                ->where(['like', $this->text, $search])
                ->andWhere([
                    'user_id' => $this->user_id,
                    'status' => Topic::STATUS_NORMAL,//连载的
                    'check' => Topic::CHECK_ADOPT //审核通过的
                ])
                ->limit($this->limit)
                ->all();

            if (!$rows){
                throw new Exception('暂无数据。');
            }

            return [
                'errcode' => 0,
                'data' => $rows
            ];


        }catch (Exception $e){
            return [
                'errcode' => 1,
                'data' => [],
                'errmsg'=> $e->getMessage()
            ];
        }
    }

}